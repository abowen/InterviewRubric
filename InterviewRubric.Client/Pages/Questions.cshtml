@using InterviewRubric.Shared
@using System.Linq
@page "/questions"
@inject HttpClient Http
@inject AppState state

<h1>List of rubric questions</h1>

@if (state.RubricQuestions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <QuestionSummary />

    <p>This component demonstrates fetching data from the server.</p>

    <div class="row">
        <form>
            <fieldset class="form-group">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Add</th>
                            <th>Selected</th>
                            <th>Question</th>
                            <th>Difficulty</th>
                            <th>Time</th>
                            <th>Low</th>
                            <th>Medium</th>
                            <th>High</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var question in state.RubricQuestions)
                        {
                        <tr>
                            <td>
                                <button onclick=@(() => state.AddQuestion(question))>Add</button>
                                <button onclick=@(() => state.RemoveQuestion(question))>Remove</button>
                            </td>
                            <td>@question.Question</td>
                            <td>@question.Difficulty</td>
                            <td>@question.Minutes min(s)</td>
                            <td>@question.Low</td>
                            <td>@question.Medium</td>
                            <td>@question.High</td>
                        </tr>
                        }
                    </tbody>
                </table>
            </fieldset>
        </form>
    </div>
}

@functions {
    protected override void OnInit()
    {
        state.OnChange += StateHasChanged;
    }
}


